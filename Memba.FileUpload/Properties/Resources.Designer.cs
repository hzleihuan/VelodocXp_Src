//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1434
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Memba.FileUpload.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Memba.FileUpload.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;
        ///&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;
        ///&lt;head&gt;&lt;title&gt;Error {0}: {1}&lt;/title&gt;&lt;/head&gt;
        ///&lt;body&gt;&lt;h1&gt;Error {0}: {1}&lt;/h1&gt;&lt;/body&gt;
        ///&lt;/html&gt;.
        /// </summary>
        internal static string ErrorPage {
            get {
                return ResourceManager.GetString("ErrorPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot process an upload which is not complete..
        /// </summary>
        internal static string ExceptionCannotProcessIfNotComplete {
            get {
                return ResourceManager.GetString("ExceptionCannotProcessIfNotComplete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The connection has been closed between the browser and the server..
        /// </summary>
        internal static string ExceptionConnectionClosed {
            get {
                return ResourceManager.GetString("ExceptionConnectionClosed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The sum of offset and count cannot be greater than the buffer length..
        /// </summary>
        internal static string ExceptionEndOfBufferReached {
            get {
                return ResourceManager.GetString("ExceptionEndOfBufferReached", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; is not a validly purchased license key..
        /// </summary>
        internal static string ExceptionLicenseProviderInvalidKey {
            get {
                return ResourceManager.GetString("ExceptionLicenseProviderInvalidKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is an error with the licensing service..
        /// </summary>
        internal static string ExceptionLicenseProviderServiceError {
            get {
                return ResourceManager.GetString("ExceptionLicenseProviderServiceError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bad request. Content-Type does not define a boundary..
        /// </summary>
        internal static string ExceptionMalformedContentType {
            get {
                return ResourceManager.GetString("ExceptionMalformedContentType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multipart boundary not found..
        /// </summary>
        internal static string ExceptionMultipartBoundaryNotFound {
            get {
                return ResourceManager.GetString("ExceptionMultipartBoundaryNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The method or operation is not implemented..
        /// </summary>
        internal static string ExceptionNotImplemented {
            get {
                return ResourceManager.GetString("ExceptionNotImplemented", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The context cannot be null..
        /// </summary>
        internal static string ExceptionNullContext {
            get {
                return ResourceManager.GetString("ExceptionNullContext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The upload identifier cannot be null or empty. You need to add a parameter named &quot;muid&quot; to the query string of your request..
        /// </summary>
        internal static string ExceptionNullOrEmptyUploadId {
            get {
                return ResourceManager.GetString("ExceptionNullOrEmptyUploadId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Request entity is too large. Please try uploading smaller files..
        /// </summary>
        internal static string ExceptionPostTooLarge {
            get {
                return ResourceManager.GetString("ExceptionPostTooLarge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user has cancelled the request..
        /// </summary>
        internal static string ExceptionRequestCanceled {
            get {
                return ResourceManager.GetString("ExceptionRequestCanceled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create directory specified in connection string from file storage provider configuration..
        /// </summary>
        internal static string ExceptionStorageProviderCannotCreateDirectory {
            get {
                return ResourceManager.GetString("ExceptionStorageProviderCannotCreateDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to load default file storage provider..
        /// </summary>
        internal static string ExceptionStorageProviderCannotLoadDefault {
            get {
                return ResourceManager.GetString("ExceptionStorageProviderCannotLoadDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid provider type in file storage provider configuration..
        /// </summary>
        internal static string ExceptionStorageProviderInvalidType {
            get {
                return ResourceManager.GetString("ExceptionStorageProviderInvalidType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Empty or missing connection string in file storage provider configuration..
        /// </summary>
        internal static string ExceptionStorageProviderMissingConnectionString {
            get {
                return ResourceManager.GetString("ExceptionStorageProviderMissingConnectionString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unrecognized attribute &quot;{0}&quot; in file storage provider configuration..
        /// </summary>
        internal static string ExceptionStorageProviderUnrecognizedAttribute {
            get {
                return ResourceManager.GetString("ExceptionStorageProviderUnrecognizedAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unauthorized access to upload data..
        /// </summary>
        internal static string ExceptionUnauthorizedAccessToUploadData {
            get {
                return ResourceManager.GetString("ExceptionUnauthorizedAccessToUploadData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An unhandled exception occurred in the upload module..
        /// </summary>
        internal static string ExceptionUnhandled {
            get {
                return ResourceManager.GetString("ExceptionUnhandled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Content-Length is 0. Probably Adobe Flash is testing the connection before an upload..
        /// </summary>
        internal static string ExceptionZeroContentLength {
            get {
                return ResourceManager.GetString("ExceptionZeroContentLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upload successfully completed..
        /// </summary>
        internal static string MessageUploadCompleted {
            get {
                return ResourceManager.GetString("MessageUploadCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transferred: {0} bytes of {1} bytes at {2:N0} bytes/sec.
        /// </summary>
        internal static string UploadData_BytesProgress {
            get {
                return ResourceManager.GetString("UploadData_BytesProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exception: {0}.
        /// </summary>
        internal static string UploadData_Exception {
            get {
                return ResourceManager.GetString("UploadData_Exception", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Files:.
        /// </summary>
        internal static string UploadData_Files {
            get {
                return ResourceManager.GetString("UploadData_Files", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Request: {0}.
        /// </summary>
        internal static string UploadData_Request {
            get {
                return ResourceManager.GetString("UploadData_Request", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time elapsed: {0}, Time left: {1}, Total time: {2}.
        /// </summary>
        internal static string UploadData_TimeProgress {
            get {
                return ResourceManager.GetString("UploadData_TimeProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- Upload data --.
        /// </summary>
        internal static string UploadData_Title {
            get {
                return ResourceManager.GetString("UploadData_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to · {0} [{1}] ({2} bytes) -&gt; {3}.
        /// </summary>
        internal static string UploadData_UploadFile {
            get {
                return ResourceManager.GetString("UploadData_UploadFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Id.: {0}.
        /// </summary>
        internal static string UploadData_UploadId {
            get {
                return ResourceManager.GetString("UploadData_UploadId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Status: {0} {1:P0}.
        /// </summary>
        internal static string UploadData_UploadProgressStatus {
            get {
                return ResourceManager.GetString("UploadData_UploadProgressStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User name: {0}.
        /// </summary>
        internal static string UploadData_UserName {
            get {
                return ResourceManager.GetString("UploadData_UserName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upload cancelled.
        /// </summary>
        internal static string UploadProgressStatus_UploadCanceled {
            get {
                return ResourceManager.GetString("UploadProgressStatus_UploadCanceled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upload complete.
        /// </summary>
        internal static string UploadProgressStatus_UploadCompleted {
            get {
                return ResourceManager.GetString("UploadProgressStatus_UploadCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upload failed.
        /// </summary>
        internal static string UploadProgressStatus_UploadFailed {
            get {
                return ResourceManager.GetString("UploadProgressStatus_UploadFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upload in progress.
        /// </summary>
        internal static string UploadProgressStatus_UploadInProgress {
            get {
                return ResourceManager.GetString("UploadProgressStatus_UploadInProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upload in unknown state.
        /// </summary>
        internal static string UploadProgressStatus_UploadUnknown {
            get {
                return ResourceManager.GetString("UploadProgressStatus_UploadUnknown", resourceCulture);
            }
        }
    }
}
