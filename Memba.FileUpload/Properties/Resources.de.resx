<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ErrorPage" xml:space="preserve">
    <value>&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
&lt;html xmlns="http://www.w3.org/1999/xhtml" &gt;
&lt;head&gt;&lt;title&gt;Fehler {0}: {1}&lt;/title&gt;&lt;/head&gt;
&lt;body&gt;&lt;h1&gt;Fehler {0}: {1}&lt;/h1&gt;&lt;/body&gt;
&lt;/html&gt;</value>
  </data>
  <data name="ExceptionCannotProcessIfNotComplete" xml:space="preserve">
    <value>Eine Übermittlung, die nicht vollständig ist, kann nicht verarbeitet werden.</value>
  </data>
  <data name="ExceptionConnectionClosed" xml:space="preserve">
    <value>Die Verbindung zwischen Browser und Server wurde getrennt.</value>
  </data>
  <data name="ExceptionEndOfBufferReached" xml:space="preserve">
    <value>Die Summe von Abweichung und Zählung kann nicht größer als die Bufferlänge sein.</value>
  </data>
  <data name="ExceptionLicenseProviderInvalidKey" xml:space="preserve">
    <value>"{0}" ist kein gültig gekaufter Lizenzschlüssel.</value>
  </data>
  <data name="ExceptionLicenseProviderServiceError" xml:space="preserve">
    <value>Beim Lizenz-Service ist ein Fehler aufgetreten.</value>
  </data>
  <data name="ExceptionMalformedContentType" xml:space="preserve">
    <value>Schlechte Anforderung. Der Inhalttyp legt keine Grenze fest.</value>
  </data>
  <data name="ExceptionMultipartBoundaryNotFound" xml:space="preserve">
    <value>Es wurde keine Mehrparteien-Grenze gefunden.</value>
  </data>
  <data name="ExceptionNotImplemented" xml:space="preserve">
    <value>Die Methode bzw. der Vorgang ist nicht implementiert.</value>
  </data>
  <data name="ExceptionNullContext" xml:space="preserve">
    <value>Der Kontext kann nicht Null sein.</value>
  </data>
  <data name="ExceptionNullOrEmptyUploadId" xml:space="preserve">
    <value>Der Upload-Bezeichner kann nicht Null oder leer sein. Sie müssen zum Frage-String Ihrer Anfrage einen als „muid" bezeichneten Parameter hinzufügen.</value>
  </data>
  <data name="ExceptionPostTooLarge" xml:space="preserve">
    <value>Der Umfang der Anfrage ist zu groß. Bitte versuchen Sie, kleinere Dateien hochzuladen.</value>
  </data>
  <data name="ExceptionRequestCanceled" xml:space="preserve">
    <value>Der Benutzer hat die Anfrage abgebrochen.</value>
  </data>
  <data name="ExceptionStorageProviderCannotCreateDirectory" xml:space="preserve">
    <value>Es kann kein Verzeichnis in Verbindung mit dem String von der Konfiguration des Anbieters für Dateispeicherung erstellt werden.</value>
  </data>
  <data name="ExceptionStorageProviderCannotLoadDefault" xml:space="preserve">
    <value>Der Standard-Anbieter für Dateispeicherung kann nicht geladen werden.</value>
  </data>
  <data name="ExceptionStorageProviderInvalidType" xml:space="preserve">
    <value>Ungültiger Anbietertyp in der Konfiguration des Anbieters für Dateispeicherung.</value>
  </data>
  <data name="ExceptionStorageProviderMissingConnectionString" xml:space="preserve">
    <value>Leerer oder fehlender Verbindungsstring in der Konfiguration des Anbieters für Dateispeicherung.</value>
  </data>
  <data name="ExceptionStorageProviderUnrecognizedAttribute" xml:space="preserve">
    <value>Nicht erkanntes Attribut "{0}" in der Konfiguration des Anbieters für Dateispeicherung.</value>
  </data>
  <data name="ExceptionUnauthorizedAccessToUploadData" xml:space="preserve">
    <value>Unbefuger Zugriff auf Hochladedaten.</value>
  </data>
  <data name="ExceptionUnhandled" xml:space="preserve">
    <value>Im Hochlademodul ist eine nicht behandelte Ausnahme aufgetreten.</value>
  </data>
  <data name="ExceptionZeroContentLength" xml:space="preserve">
    <value>Die Länge des Inhalts ist 0. Wahrscheinlich testet Adobe Flash die Verbindung vor einem Upload.</value>
  </data>
  <data name="MessageUploadCompleted" xml:space="preserve">
    <value>Hochladen erfolgreich abgeschlossen.</value>
  </data>
  <data name="UploadData_BytesProgress" xml:space="preserve">
    <value>Übertragen: {0} Bytes von {1} Bytes mit {2:N0} Bytes/Sek.</value>
  </data>
  <data name="UploadData_Exception" xml:space="preserve">
    <value>Ausnahme: {0}</value>
  </data>
  <data name="UploadData_Files" xml:space="preserve">
    <value>Dateien:</value>
  </data>
  <data name="UploadData_Request" xml:space="preserve">
    <value>Anfrage: {0}</value>
  </data>
  <data name="UploadData_TimeProgress" xml:space="preserve">
    <value>Verstrichene Zeit: {0}, Verbleibende Zeit: {1}, Gesamtzeit: {2}</value>
  </data>
  <data name="UploadData_Title" xml:space="preserve">
    <value>-- Hochladedaten --</value>
  </data>
  <data name="UploadData_UploadFile" xml:space="preserve">
    <value>· {0} [{1}] ({2} Bytes) -&gt; {3}</value>
  </data>
  <data name="UploadData_UploadId" xml:space="preserve">
    <value>Id.: {0}</value>
  </data>
  <data name="UploadData_UploadProgressStatus" xml:space="preserve">
    <value>Status: {0} {1:P0}</value>
  </data>
  <data name="UploadData_UserName" xml:space="preserve">
    <value>Benutzername: {0}</value>
  </data>
  <data name="UploadProgressStatus_UploadCanceled" xml:space="preserve">
    <value>Hochladen abgebrochen</value>
  </data>
  <data name="UploadProgressStatus_UploadCompleted" xml:space="preserve">
    <value>Hochladen erledigt</value>
  </data>
  <data name="UploadProgressStatus_UploadFailed" xml:space="preserve">
    <value>Hochladen gescheitert</value>
  </data>
  <data name="UploadProgressStatus_UploadInProgress" xml:space="preserve">
    <value>Hochladen läuft</value>
  </data>
  <data name="UploadProgressStatus_UploadUnknown" xml:space="preserve">
    <value>Hochladestatus unbekannt</value>
  </data>
</root>