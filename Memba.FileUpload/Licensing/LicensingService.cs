/*
 * Copyright © 2005-2008 Memba SA. All rights reserved.
 * 
 * This file is part of Velodoc XP Edition.
 * 
 * Velodoc XP Edition is open-source software: you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the Free Software Foundation,
 * either version 2 of the License, or (at your option) any later version.
 * 
 * Velodoc XP Edition is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License along with Velodoc XP Edition.
 * If not, see <http://www.gnu.org/licenses/>.
 * 
 * For more information, please contact Memba at <http://www.memba.com>.
 * You can find more information about Velodoc at <http://www.velodoc.com> and <http://www.velodoc.com/help>.
 * You can try Velodoc online at <http://www.velodoc.net>.
 *
*/

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Runtime.Serialization.ContractNamespaceAttribute("http://schemas.memba.org/2006/licensing/webservices", ClrNamespace="Memba.FileUpload.Licensing")]

namespace Memba.FileUpload.Licensing //schemas.memba.org._2006.licensing.webservices
{
    using System.Runtime.Serialization;

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ActivationData", Namespace = "http://schemas.memba.org/2006/licensing/webservices")]
    public partial class ActivationData : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        private System.Guid ActivationKeyField;

        private string CultureNameField;

        private string DomainNameField;

        private string FmkVersionField;

        private string IPAddressField;

        private System.Guid LicenseKeyField;

        private string MACAddressField;

        private string MachineNameField;

        private string OSVersionField;

        private int ProcessorCountField;

        private string ProductCodeField;

        private string UserNameField;

        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ActivationKey
        {
            get
            {
                return this.ActivationKeyField;
            }
            set
            {
                this.ActivationKeyField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CultureName
        {
            get
            {
                return this.CultureNameField;
            }
            set
            {
                this.CultureNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DomainName
        {
            get
            {
                return this.DomainNameField;
            }
            set
            {
                this.DomainNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FmkVersion
        {
            get
            {
                return this.FmkVersionField;
            }
            set
            {
                this.FmkVersionField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IPAddress
        {
            get
            {
                return this.IPAddressField;
            }
            set
            {
                this.IPAddressField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid LicenseKey
        {
            get
            {
                return this.LicenseKeyField;
            }
            set
            {
                this.LicenseKeyField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MACAddress
        {
            get
            {
                return this.MACAddressField;
            }
            set
            {
                this.MACAddressField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MachineName
        {
            get
            {
                return this.MachineNameField;
            }
            set
            {
                this.MachineNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OSVersion
        {
            get
            {
                return this.OSVersionField;
            }
            set
            {
                this.OSVersionField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProcessorCount
        {
            get
            {
                return this.ProcessorCountField;
            }
            set
            {
                this.ProcessorCountField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductCode
        {
            get
            {
                return this.ProductCodeField;
            }
            set
            {
                this.ProductCodeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName
        {
            get
            {
                return this.UserNameField;
            }
            set
            {
                this.UserNameField = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace = "http://schemas.memba.org/2006/licensing/webservices", ConfigurationName = "ILicensingService")]
    public interface ILicensingService
    {

        [System.ServiceModel.OperationContractAttribute(Action = "http://schemas.memba.org/2006/licensing/webservices/ILicensingService/Activate", ReplyAction = "http://schemas.memba.org/2006/licensing/webservices/ILicensingService/ActivateRes" +
            "ponse")]
        int Activate(Memba.FileUpload.Licensing.ActivationData data);

        [System.ServiceModel.OperationContractAttribute(Action = "http://schemas.memba.org/2006/licensing/webservices/ILicensingService/Check", ReplyAction = "http://schemas.memba.org/2006/licensing/webservices/ILicensingService/CheckRespon" +
            "se")]
        int Check(string licenseKey, string activationKey);
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface ILicensingServiceChannel : ILicensingService, System.ServiceModel.IClientChannel
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class LicensingServiceClient : System.ServiceModel.ClientBase<ILicensingService>, ILicensingService
    {

        public LicensingServiceClient()
        {
        }

        public LicensingServiceClient(string endpointConfigurationName)
            :
                base(endpointConfigurationName)
        {
        }

        public LicensingServiceClient(string endpointConfigurationName, string remoteAddress)
            :
                base(endpointConfigurationName, remoteAddress)
        {
        }

        public LicensingServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress)
            :
                base(endpointConfigurationName, remoteAddress)
        {
        }

        public LicensingServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress)
            :
                base(binding, remoteAddress)
        {
        }

        public int Activate(Memba.FileUpload.Licensing.ActivationData data)
        {
            return base.Channel.Activate(data);
        }

        public int Check(string licenseKey, string activationKey)
        {
            return base.Channel.Check(licenseKey, activationKey);
        }
    }
}